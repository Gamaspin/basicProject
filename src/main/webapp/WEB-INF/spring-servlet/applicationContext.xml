<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/jdbc
       http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

    <!--서버용 start-->
    <!--   <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
           <property name="driverClassName" value="org.mariadb.jdbc.Driver"/>
           <property name="url"
                     value="jdbc:mariadb://localhost:3306/ks_hrms?useUnicode=yes&amp;characterEncoding=UTF-8&amp;verifyServerCertificate=false&amp;useSSL=false"/> &lt;!&ndash; DB에 삽입하는 데이터가 한글이기 때문에 Unicode를 사용하고 UTF-8로 인코딩한다. &ndash;&gt;
           <property name="username" value="hrms_user"/>
           <property name="password" value="Hrms_2020_@)@)"/>
           <property name="connectionProperties" value="characterEncoding=utf8" />
       </bean>

       <bean id="SqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
           <property name="dataSource" ref="dataSource"/> &lt;!&ndash; name:sqlsession bean에서 사용할 이름, ref:위의 연결설정에서 정해진 dataSource를 참조 &ndash;&gt;
           <property name="mapperLocations" value="classpath:mapper/*.xml"/> &lt;!&ndash; 앞으로 참조할 sql문이 위치할 장소 &ndash;&gt;
           <property name="configurationProperties">&lt;!&ndash; mapper에서 양방향 암호화 사용 시 사용될 복호화 키 &ndash;&gt;
               <props>
                   <prop key="cryptKey">'Gksrnr_rhdyd_!@3'</prop> &lt;!&ndash; 한국_고용_123 : 93 TRILLION YEARS&ndash;&gt;
               </props>
           </property>
       </bean>-->
    <!--서버용 end-->




    <!-- JDBC: Java DataBase Connectivity 자바에서 데이터베이스에 접속하게 하는 API -->
    <!-- applicationContext: 스프링이 관리하는 빈들이 담겨 있는 컨테이너
    서비스 계층이나 DAO를 포함한, 웹 환경에 독립적인 빈들을 담아둔다.
    서로 다른 서블릿컨텍스트에서 공유해야 하는 빈들을 등록해놓고 사용할 수 있다.
    Servlet context에 등록된 빈들을 이용 불가능하고 servlet context와 공통된 빈이 있다면 servlet context 빈이 우선된다.
    WebApplication 전체에 사용가능한 DB연결, 로깅 기능들이 이용된다.
    ApplicationContext는 주로 XML 파일을 사용하여 bean들을 설정한다 -->


    <!-- 스프링 설정파일에서 DataSource를 설정하고 공유된 DataSource 빈을 DAO 클래스에 의존성 주입하는 것
        driverClassName: JDBC Driver class name설정
        url : DataBase에 접근하기 위한 URL
        username  : DataBase에 접근 하기 위한 사용자명
        password  : DataBase에 접근 하기 위한 암호-->

    <!-- 로컬 확인용 start-->
    <bean id="dataSource-mariadb" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"/>
        <property name="jdbcUrl" value="jdbc:log4jdbc:mariadb://10.10.10.109:3306/hansung_ryu?useUnicode=yes&amp;characterEncoding=UTF-8&amp;verifyServerCertificate=false&amp;useSSL=false"/> <!-- DB에 삽입하는 데이터가 한글이기 때문에 Unicode를 사용하고 UTF-8로 인코딩한다. -->
        <property name="username" value="hrms_user"/>
        <property name="password" value="Hrms_2020_@)@)"/>
        <property name="dataSourceProperties">
            <props>
                <prop key="cachePrepStmts">true</prop>
                <prop key="prepStmtCacheSize">250</prop>
                <prop key="prepStmtCacheSqlLimit">2048</prop>
                <prop key="useServerPrepStmts">true</prop>
                <prop key="useLocalSessionState">true</prop>
                <prop key="rewriteBatchedStatements">true</prop>
                <prop key="cacheResultSetMetadata">true</prop>
                <prop key="cacheServerConfiguration">true</prop>
                <prop key="elideSetAutoCommits">true</prop>
                <prop key="maintainTimeStats">false</prop>
                <prop key="maxTotal">100</prop>				<!-- 동시에 사용할 수 있는 최대 커넥션 개수(기본값: 8) -->
                <prop key="maxWaitMillis">10000</prop>
                <prop key="maxIdle">30</prop>				<!-- 커넥션 풀에 반납할 때 최대로 유지될 수 있는 커넥션 개수(기본값: 8) -->
                <prop key="timeBetweenEvictionRunsMillis">600000"</prop>
                <prop key="poolPreparedStatements">true</prop>
                <prop key="maxOpenPreparedStatements">50</prop>
            </props>
        </property>
    </bean>

    <bean id="dataSource" class="net.sf.log4jdbc.sql.jdbcapi.DataSourceSpy">
        <constructor-arg ref="dataSource-mariadb" />
    </bean>

    <!-- 마이바티스는 SqlSession 생성을 위해 SqlSessionFactory를 사용
		세션을 한번 생성하면 매핑구문을 실행하거나 커밋 또는 롤백을 하기 위해 세션을 사용
		마지막으로 더 이상 필요하지 않은 상태가 되면 세션을 닫음
		dataSource : 데이터소스
    configLocation : 설정파일경로 -->
    <bean id="SqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/> <!-- name:sqlsession bean에서 사용할 이름, ref:위의 연결설정에서 정해진 dataSource를 참조 -->

        <property name="configLocation" value="classpath:/mybatis-config.xml"/>
        <property name="mapperLocations" value="classpath*:/mappers/*.xml"/> <!-- 앞으로 참조할 sql문이 위치할 장소 -->

        <property name="configurationProperties"><!-- mapper에서 양방향 암호화 사용 시 사용될 복호화 키 -->
            <props>
                <prop key="cryptKey">'Gksrnr_rhdyd_!@3'</prop> <!-- 한국_고용_123 : 93 TRILLION YEARS-->
            </props>
        </property>
    </bean>
    <!--로컬 확인용 end-->



    <!-- 서버/로컬 공용 -->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="SqlSessionFactory"/>
    </bean>
    <!-- 설정에 따라 자동으로 커밋 혹은 롤백을 수행하고 닫혀지는, 스레드에 안전한 SqlSession 개체가 스프링 빈에 주입
            SqlSession을 구현하고 코드에서 SqlSession을 대체하는 역할 ,스레드에 안전하고 여러개의 DAO나 매퍼에서 공유가능
           SqlSessionTemplate은 생성자인자로 SqlSessionFactory를 사용해서 생성가능 -->


    <!-- Transaction -->
    <!-- annotationt스캔은 dispatcher-servlet에 있음 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>


    <!--    메일관련 설정-->
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="mail.kbsjob.co.kr" />
        <property name="port" value="587" />
        <property name="username" value="notice@kbsjob.co.kr" />
        <property name="password" value="rhdwl_1234*" />
        <property name="defaultEncoding" value="utf-8" />
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.ssl.trust">mail.kbsjob.co.kr</prop>
                <prop key="mail.transport.protocol">smtp</prop>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.smtp.starttls.required">true</prop>
                <prop key="mail.debug">true</prop>
            </props>
        </property>
    </bean>

</beans>